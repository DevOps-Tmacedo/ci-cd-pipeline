image: docker:latest  # Usando a imagem Docker padrão

stages:               # Definindo as etapas do pipeline
  - build
  - test
  - deploy
  - notify  # Adicionando a etapa de notificação

build-job:           # Job para construir o projeto
  stage: build
  script:
    - echo "Construindo o projeto..."  # Simulando a construção
    - sleep 2  # Pausa para simulação
    - echo "Projeto construído com sucesso!"

test-job:            # Job para testar o projeto
  stage: test
  script:
    - echo "Executando testes..."  # Simulando a execução de testes
    - sleep 2  # Pausa para simulação
    - echo "Testes concluídos com sucesso!"

deploy-to-develop:   # Job para implantar manualmente no develop
  stage: deploy
  script:
    - echo "Implantando o projeto em develop..."  # Simulando a implantação
    - sleep 2  # Pausa para simulação
    - echo "Implantação em develop concluída com sucesso!"
  when: manual  # Este job requer acionamento manual
  only:
    - develop  # Este job só será executado para o branch develop

deploy-to-main:      # Job para implantar manualmente no main
  stage: deploy
  script:
    - echo "Implantando o projeto em main..."  # Simulando a implantação
    - sleep 2  # Pausa para simulação
    - echo "Implantação em main concluída com sucesso!"
  when: manual  # Este job requer acionamento manual
  only:
    - main  # Este job só será executado para o branch main

notify-google-chat:  # Job para enviar notificação ao Google Chat
  stage: notify
  script:
    - echo "Enviando notificação ao Google Chat..."
    - |
      curl -X POST -H 'Content-Type: application/json' -d '{
        "text": "O pipeline foi concluído com sucesso! Veja os detalhes do commit no repositório."
      }' https://chat.googleapis.com/v1/spaces/AAAA1PPbgYY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=IS9uU0GTcgpVNPOzom19CWT8KoOc6oR7rRiJT09Hpew
  only:
    - develop
    - main
